// <auto-generated />
using System;
using Aerolinea.Vuelos.Infrastructure.EF.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Aerolinea.Vuelos.Infrastructure.EF.Migrations
{
    [DbContext(typeof(ReadDbContext))]
    [Migration("20220507114722_InitialStructure")]
    partial class InitialStructure
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.16")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Aerolinea.Vuelos.Infrastructure.EF.ReadModel.PlanillaAsientoVueloReadModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("activo")
                        .HasColumnType("int");

                    b.Property<string>("asiento")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("estado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("vueloId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("vueloId");

                    b.ToTable("PlanillaAsientoVuelo");
                });

            modelBuilder.Entity("Aerolinea.Vuelos.Infrastructure.EF.ReadModel.TripulacionVueloReadModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("activo")
                        .HasColumnType("int")
                        .HasColumnName("activo");

                    b.Property<Guid>("codEmpleado")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("codEmpleado");

                    b.Property<Guid>("codTripulacion")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("codTripulacion");

                    b.Property<string>("estado")
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)")
                        .HasColumnName("estado");

                    b.Property<Guid?>("vueloId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("vueloId");

                    b.ToTable("TripulacionVuelo");
                });

            modelBuilder.Entity("Aerolinea.Vuelos.Infrastructure.EF.ReadModel.VueloReadModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("activo")
                        .HasColumnType("int")
                        .HasColumnName("activo");

                    b.Property<Guid>("codAeronave")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("codAeronave");

                    b.Property<Guid>("codDestino")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("codDestino");

                    b.Property<Guid>("codOrigen")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("codOrigen");

                    b.Property<string>("estado")
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)")
                        .HasColumnName("estado");

                    b.Property<DateTime>("fecha")
                        .HasColumnType("DateTime")
                        .HasColumnName("fecha");

                    b.Property<DateTime>("horaLLegada")
                        .HasColumnType("DateTime")
                        .HasColumnName("horaLLegada");

                    b.Property<DateTime>("horaSalida")
                        .HasColumnType("DateTime")
                        .HasColumnName("horaSalida");

                    b.Property<decimal>("precio")
                        .HasPrecision(12, 2)
                        .HasColumnType("decimal(12,2)")
                        .HasColumnName("precio");

                    b.Property<int>("stockAsientos")
                        .HasColumnType("int")
                        .HasColumnName("stockAsientos");

                    b.HasKey("Id");

                    b.ToTable("Vuelo");
                });

            modelBuilder.Entity("Aerolinea.Vuelos.Infrastructure.EF.ReadModel.PlanillaAsientoVueloReadModel", b =>
                {
                    b.HasOne("Aerolinea.Vuelos.Infrastructure.EF.ReadModel.VueloReadModel", "vuelo")
                        .WithMany("detallePlanillaVuelo")
                        .HasForeignKey("vueloId");

                    b.Navigation("vuelo");
                });

            modelBuilder.Entity("Aerolinea.Vuelos.Infrastructure.EF.ReadModel.TripulacionVueloReadModel", b =>
                {
                    b.HasOne("Aerolinea.Vuelos.Infrastructure.EF.ReadModel.VueloReadModel", "vuelo")
                        .WithMany("DetalleTripulacion")
                        .HasForeignKey("vueloId");

                    b.Navigation("vuelo");
                });

            modelBuilder.Entity("Aerolinea.Vuelos.Infrastructure.EF.ReadModel.VueloReadModel", b =>
                {
                    b.Navigation("detallePlanillaVuelo");

                    b.Navigation("DetalleTripulacion");
                });
#pragma warning restore 612, 618
        }
    }
}
